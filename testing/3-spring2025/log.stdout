Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home2/wangyian/miniconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/e98242df53d84557b34c0c5ec4b93ec7-pulp.mps max sec 15 timeMode elapsed branch printingOptions all solution /tmp/e98242df53d84557b34c0c5ec4b93ec7-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 27655 COLUMNS
At line 102594 RHS
At line 130245 BOUNDS
At line 138246 ENDATA
Problem MODEL has 27650 rows, 8000 columns and 74155 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 15
Option for timeMode changed from cpu to elapsed
Presolve 4019 (-23631) rows, 2408 (-5592) columns and 12804 (-61351) elements
Perturbing problem by 0.001% of 0.5 - largest nonzero change 0.00099218063 ( 0.19843613%) - largest zero change 0.00098928847
0  Obj 1 Primal inf 64.352021 (49) Dual inf 40.130182 (81)
155  Obj 10.970489 Primal inf 306.20923 (277)
310  Obj 10.961013 Primal inf 255.38774 (290)
465  Obj 10.955849 Primal inf 295.209 (244)
620  Obj 10.953179 Primal inf 143.72759 (169)
775  Obj 10.949174 Primal inf 127.69886 (140)
930  Obj 10.944954 Primal inf 158.67228 (141)
1085  Obj 10.943165 Primal inf 109.58457 (129)
1240  Obj 10.94188 Primal inf 54.275902 (72)
1395  Obj 10.940953 Primal inf 54.542032 (96)
1526  Obj 10.940783
Optimal - objective value 11
After Postsolve, objective 11, infeasibilities - dual 0 (0), primal 0 (0)
Optimal objective 11 - 1526 iterations time 0.062, Presolve 0.02
Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home2/wangyian/miniconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/0511a397dc774d38a57e5346bfeb527c-pulp.mps max sec 15 timeMode elapsed branch printingOptions all solution /tmp/0511a397dc774d38a57e5346bfeb527c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 27655 COLUMNS
At line 118594 RHS
At line 146245 BOUNDS
At line 154246 ENDATA
Problem MODEL has 27650 rows, 8000 columns and 74155 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 15
Option for timeMode changed from cpu to elapsed
Continuous objective value is 11 - 0.06 seconds
Cgl0002I 3330 variables fixed
Cgl0003I 390 fixed, 0 tightened bounds, 1978 strengthened rows, 476 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 580 strengthened rows, 12 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 435 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 233 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 168 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 84 strengthened rows, 158 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 6 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 27 strengthened rows, 36 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 2124 rows, 1902 columns (1902 integer (1850 of which binary)) and 9087 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 80 integer variables out of 1902 objects (1902 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 55 integers unsatisfied sum - 8.57333
Cbc0038I Pass   1: suminf.    7.64000 (41) obj. -11 iterations 274
Cbc0038I Pass   2: suminf.    7.64000 (41) obj. -11 iterations 84
Cbc0038I Pass   3: suminf.    6.82000 (34) obj. -11 iterations 359
Cbc0038I Pass   4: suminf.    6.82000 (34) obj. -11 iterations 247
Cbc0038I Pass   5: suminf.    8.11333 (35) obj. -11 iterations 50
Cbc0038I Pass   6: suminf.    6.82000 (34) obj. -11 iterations 62
Cbc0038I Pass   7: suminf.    7.22000 (44) obj. -11 iterations 283
Cbc0038I Pass   8: suminf.    7.22000 (44) obj. -11 iterations 231
Cbc0038I Pass   9: suminf.    8.51333 (45) obj. -11 iterations 126
Cbc0038I Pass  10: suminf.    7.22000 (44) obj. -11 iterations 136
Cbc0038I Pass  11: suminf.    9.26000 (43) obj. -11 iterations 324
Cbc0038I Pass  12: suminf.    7.22000 (44) obj. -11 iterations 249
Cbc0038I Pass  13: suminf.    7.22000 (44) obj. -11 iterations 31
Cbc0038I Pass  14: suminf.    8.51333 (45) obj. -11 iterations 146
Cbc0038I Pass  15: suminf.    7.22000 (44) obj. -11 iterations 148
Cbc0038I Pass  16: suminf.    6.05333 (51) obj. -11 iterations 260
Cbc0038I Pass  17: suminf.    1.60000 (37) obj. -11 iterations 254
Cbc0038I Pass  18: suminf.    1.60000 (37) obj. -11 iterations 58
Cbc0038I Pass  19: suminf.    7.52000 (41) obj. -11 iterations 183
Cbc0038I Pass  20: suminf.    7.48000 (40) obj. -11 iterations 45
Cbc0038I Pass  21: suminf.    7.48000 (40) obj. -11 iterations 92
Cbc0038I Pass  22: suminf.    8.78000 (41) obj. -11 iterations 254
Cbc0038I Pass  23: suminf.    7.48000 (40) obj. -11 iterations 221
Cbc0038I Pass  24: suminf.    3.37333 (26) obj. -11 iterations 14
Cbc0038I Pass  25: suminf.    3.04000 (34) obj. -11 iterations 51
Cbc0038I Pass  26: suminf.    7.52000 (41) obj. -11 iterations 71
Cbc0038I Pass  27: suminf.    7.18667 (29) obj. -11 iterations 266
Cbc0038I Pass  28: suminf.    5.04000 (22) obj. -11 iterations 264
Cbc0038I Pass  29: suminf.    6.97333 (16) obj. -11 iterations 267
Cbc0038I Pass  30: suminf.    2.64000 (24) obj. -11 iterations 216
Cbc0038I Pass  31: suminf.    2.64000 (24) obj. -11 iterations 6
Cbc0038I Pass  32: suminf.    8.33000 (32) obj. -11 iterations 106
Cbc0038I Pass  33: suminf.    8.33000 (32) obj. -11 iterations 39
Cbc0038I Pass  34: suminf.    7.12000 (31) obj. -11 iterations 104
Cbc0038I Pass  35: suminf.    7.08000 (30) obj. -11 iterations 62
Cbc0038I Pass  36: suminf.    7.08000 (23) obj. -11 iterations 55
Cbc0038I Pass  37: suminf.    8.70667 (41) obj. -11 iterations 261
Cbc0038I Pass  38: suminf.    7.40000 (38) obj. -11 iterations 214
Cbc0038I Pass  39: suminf.    7.40000 (38) obj. -11 iterations 46
Cbc0038I Pass  40: suminf.    7.40000 (31) obj. -11 iterations 20
Cbc0038I Pass  41: suminf.    9.92000 (37) obj. -11 iterations 222
Cbc0038I Pass  42: suminf.    7.40000 (38) obj. -11 iterations 212
Cbc0038I Pass  43: suminf.    7.40000 (38) obj. -11 iterations 62
Cbc0038I Pass  44: suminf.    9.68000 (40) obj. -11 iterations 296
Cbc0038I Pass  45: suminf.    5.25333 (31) obj. -11 iterations 252
Cbc0038I Pass  46: suminf.   10.35333 (35) obj. -11 iterations 136
Cbc0038I Pass  47: suminf.    8.12333 (35) obj. -11 iterations 71
Cbc0038I Pass  48: suminf.    8.12333 (35) obj. -11 iterations 18
Cbc0038I Pass  49: suminf.    5.25333 (31) obj. -11 iterations 116
Cbc0038I Pass  50: suminf.    5.25333 (31) obj. -11 iterations 10
Cbc0038I Pass  51: suminf.    7.40000 (38) obj. -11 iterations 78
Cbc0038I Pass  52: suminf.    7.40000 (38) obj. -11 iterations 22
Cbc0038I Pass  53: suminf.    5.25333 (31) obj. -11 iterations 91
Cbc0038I Pass  54: suminf.    5.25333 (31) obj. -11 iterations 252
Cbc0038I Pass  55: suminf.    7.40000 (45) obj. -11 iterations 285
Cbc0038I Pass  56: suminf.    7.40000 (38) obj. -11 iterations 194
Cbc0038I Pass  57: suminf.    5.25333 (31) obj. -11 iterations 61
Cbc0038I Pass  58: suminf.    5.25333 (31) obj. -11 iterations 50
Cbc0038I Pass  59: suminf.    8.78000 (41) obj. -11 iterations 106
Cbc0038I Pass  60: suminf.    8.78000 (34) obj. -11 iterations 260
Cbc0038I Pass  61: suminf.    5.22667 (35) obj. -11 iterations 192
Cbc0038I Pass  62: suminf.    8.75333 (38) obj. -11 iterations 104
Cbc0038I Pass  63: suminf.    7.37333 (35) obj. -11 iterations 63
Cbc0038I Pass  64: suminf.    5.22667 (35) obj. -11 iterations 26
Cbc0038I Pass  65: suminf.    5.22667 (35) obj. -11 iterations 191
Cbc0038I Pass  66: suminf.    5.22667 (35) obj. -11 iterations 173
Cbc0038I Pass  67: suminf.   11.35333 (39) obj. -11 iterations 113
Cbc0038I Pass  68: suminf.    5.84000 (38) obj. -11 iterations 76
Cbc0038I Pass  69: suminf.    5.62667 (45) obj. -11 iterations 39
Cbc0038I Pass  70: suminf.    5.22667 (35) obj. -11 iterations 122
Cbc0038I Pass  71: suminf.    5.22667 (35) obj. -11 iterations 28
Cbc0038I Pass  72: suminf.   11.35333 (39) obj. -11 iterations 114
Cbc0038I Pass  73: suminf.    5.84000 (38) obj. -11 iterations 89
Cbc0038I Pass  74: suminf.    5.62667 (45) obj. -11 iterations 38
Cbc0038I Pass  75: suminf.    6.63333 (38) obj. -11 iterations 87
Cbc0038I Pass  76: suminf.    6.37333 (42) obj. -11 iterations 250
Cbc0038I Pass  77: suminf.    5.62667 (45) obj. -11 iterations 192
Cbc0038I Pass  78: suminf.    6.63333 (38) obj. -11 iterations 67
Cbc0038I Pass  79: suminf.   10.26667 (47) obj. -11 iterations 246
Cbc0038I Pass  80: suminf.    5.62667 (45) obj. -11 iterations 242
Cbc0038I Pass  81: suminf.    5.22667 (35) obj. -11 iterations 164
Cbc0038I Pass  82: suminf.    5.22667 (35) obj. -11 iterations 48
Cbc0038I Pass  83: suminf.    8.75333 (38) obj. -11 iterations 127
Cbc0038I Pass  84: suminf.    7.37333 (35) obj. -11 iterations 71
Cbc0038I Pass  85: suminf.    5.22667 (35) obj. -11 iterations 86
Cbc0038I Pass  86: suminf.    5.22667 (35) obj. -11 iterations 211
Cbc0038I Pass  87: suminf.    5.22667 (35) obj. -11 iterations 190
Cbc0038I Pass  88: suminf.    8.75333 (38) obj. -11 iterations 105
Cbc0038I Pass  89: suminf.    7.37333 (35) obj. -11 iterations 52
Cbc0038I Pass  90: suminf.    5.22667 (35) obj. -11 iterations 33
Cbc0038I Pass  91: suminf.    5.25333 (31) obj. -11 iterations 191
Cbc0038I Pass  92: suminf.    5.25333 (31) obj. -11 iterations 166
Cbc0038I Pass  93: suminf.    7.40000 (38) obj. -11 iterations 70
Cbc0038I Pass  94: suminf.    7.40000 (38) obj. -11 iterations 44
Cbc0038I Pass  95: suminf.    8.78000 (34) obj. -11 iterations 46
Cbc0038I Pass  96: suminf.    7.40000 (38) obj. -11 iterations 214
Cbc0038I Pass  97: suminf.    7.40000 (38) obj. -11 iterations 189
Cbc0038I Pass  98: suminf.    7.76000 (34) obj. -11 iterations 63
Cbc0038I Pass  99: suminf.    7.76000 (34) obj. -11 iterations 194
Cbc0038I Pass 100: suminf.   11.91333 (44) obj. -11 iterations 249
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1547 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2124 rows 1902 columns, reduced to 370 rows 338 columns
Cbc0038I Mini branch and bound did not improve solution (1.14 seconds)
Cbc0038I After 1.14 seconds - Feasibility pump exiting - took 0.78 seconds
Cbc0031I 5 added rows had average density of 348.4
Cbc0013I At root node, 5 cuts changed objective from -11 to -11 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 72 row cuts average 541.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 193.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 4 row cuts average 43.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 43 row cuts average 148.2 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -11 (1.53 seconds)
Cbc0010I After 100 nodes, 53 on tree, 1e+50 best solution, best possible -11 (3.65 seconds)
Cbc0010I After 200 nodes, 79 on tree, 1e+50 best solution, best possible -11 (3.91 seconds)
Cbc0010I After 300 nodes, 117 on tree, 1e+50 best solution, best possible -11 (4.16 seconds)
Cbc0010I After 400 nodes, 157 on tree, 1e+50 best solution, best possible -11 (4.45 seconds)
Cbc0010I After 500 nodes, 196 on tree, 1e+50 best solution, best possible -11 (4.78 seconds)
Cbc0010I After 600 nodes, 233 on tree, 1e+50 best solution, best possible -11 (5.25 seconds)
Cbc0010I After 700 nodes, 274 on tree, 1e+50 best solution, best possible -11 (5.64 seconds)
Cbc0010I After 800 nodes, 314 on tree, 1e+50 best solution, best possible -11 (6.04 seconds)
Cbc0004I Integer solution of -11 found after 40839 iterations and 877 nodes (6.38 seconds)
Cbc0001I Search completed - best objective -10.9999999999999, took 40839 iterations and 877 nodes (6.38 seconds)
Cbc0032I Strong branching done 1884 times (41097 iterations), fathomed 4 nodes and fixed 30 variables
Cbc0035I Maximum depth 61, 0 variables fixed on reduced cost
Cuts at root node changed objective from -11 to -11
Probing was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Gomory was tried 160 times and created 72 cuts of which 0 were active after adding rounds of cuts (0.103 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
TwoMirCuts was tried 10 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                11.00000000
Enumerated nodes:               877
Total iterations:               40839
Time (CPU seconds):             6.38
Time (Wallclock seconds):       6.42

Option for printingOptions changed from normal to all
Total time (CPU seconds):       6.42   (Wallclock seconds):       6.48

