Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home2/wangyian/miniconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/b5d1ad3d0de74663bd7d8ccdfaa450e5-pulp.mps max sec 15 timeMode elapsed branch printingOptions all solution /tmp/b5d1ad3d0de74663bd7d8ccdfaa450e5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 27655 COLUMNS
At line 102594 RHS
At line 130245 BOUNDS
At line 138246 ENDATA
Problem MODEL has 27650 rows, 8000 columns and 74155 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 15
Option for timeMode changed from cpu to elapsed
Presolve 4019 (-23631) rows, 2408 (-5592) columns and 12804 (-61351) elements
Perturbing problem by 0.001% of 0.5 - largest nonzero change 0.00099218063 ( 0.19843613%) - largest zero change 0.00098928847
0  Obj 1 Primal inf 64.352021 (49) Dual inf 40.130182 (81)
155  Obj 10.9705 Primal inf 304.03443 (277)
310  Obj 10.961435 Primal inf 262.23641 (282)
465  Obj 10.955866 Primal inf 211.72139 (220)
620  Obj 10.953379 Primal inf 160.42794 (192)
775  Obj 10.950233 Primal inf 1816.2228 (169)
930  Obj 10.947192 Primal inf 135.91283 (153)
1085  Obj 10.943551 Primal inf 104.51996 (151)
1240  Obj 10.941885 Primal inf 85.006778 (109)
1395  Obj 10.940912 Primal inf 40.060805 (47)
1520  Obj 10.94082
Optimal - objective value 11
After Postsolve, objective 11, infeasibilities - dual 0 (0), primal 0 (0)
Optimal objective 11 - 1520 iterations time 0.062, Presolve 0.02
Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home2/wangyian/miniconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/7458907beb224a158d80d9327a57eebe-pulp.mps max sec 15 timeMode elapsed branch printingOptions all solution /tmp/7458907beb224a158d80d9327a57eebe-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 27655 COLUMNS
At line 118594 RHS
At line 146245 BOUNDS
At line 154246 ENDATA
Problem MODEL has 27650 rows, 8000 columns and 74155 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 15
Option for timeMode changed from cpu to elapsed
Continuous objective value is 11 - 0.07 seconds
Cgl0002I 3330 variables fixed
Cgl0003I 390 fixed, 0 tightened bounds, 2028 strengthened rows, 475 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 598 strengthened rows, 12 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 436 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 254 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 186 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 97 strengthened rows, 156 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 66 strengthened rows, 6 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 40 strengthened rows, 52 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 59 strengthened rows, 32 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 3 fixed, 0 tightened bounds, 10 strengthened rows, 2 substitutions
Cgl0004I processed model has 2094 rows, 1885 columns (1885 integer (1833 of which binary)) and 9019 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 80 integer variables out of 1885 objects (1882 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 38 integers unsatisfied sum - 12
Cbc0038I Pass   1: suminf.    9.25000 (46) obj. -11 iterations 356
Cbc0038I Pass   2: suminf.    9.25000 (46) obj. -11 iterations 100
Cbc0038I Pass   3: suminf.    4.66667 (14) obj. -11 iterations 355
Cbc0038I Pass   4: suminf.    4.66667 (14) obj. -11 iterations 271
Cbc0038I Pass   5: suminf.    4.66667 (14) obj. -11 iterations 83
Cbc0038I Pass   6: suminf.    4.66667 (14) obj. -11 iterations 290
Cbc0038I Pass   7: suminf.    4.66667 (14) obj. -11 iterations 249
Cbc0038I Pass   8: suminf.    4.66667 (14) obj. -11 iterations 96
Cbc0038I Pass   9: suminf.    4.66667 (14) obj. -11 iterations 306
Cbc0038I Pass  10: suminf.    4.66667 (14) obj. -11 iterations 266
Cbc0038I Pass  11: suminf.    4.66667 (14) obj. -11 iterations 97
Cbc0038I Pass  12: suminf.    4.66667 (14) obj. -11 iterations 289
Cbc0038I Pass  13: suminf.    4.66667 (14) obj. -11 iterations 233
Cbc0038I Pass  14: suminf.    4.66667 (14) obj. -11 iterations 93
Cbc0038I Pass  15: suminf.    4.66667 (14) obj. -11 iterations 255
Cbc0038I Pass  16: suminf.    4.66667 (14) obj. -11 iterations 236
Cbc0038I Pass  17: suminf.    4.66667 (14) obj. -11 iterations 71
Cbc0038I Pass  18: suminf.    4.66667 (14) obj. -11 iterations 276
Cbc0038I Pass  19: suminf.    4.66667 (14) obj. -11 iterations 226
Cbc0038I Pass  20: suminf.    4.66667 (14) obj. -11 iterations 78
Cbc0038I Pass  21: suminf.    4.66667 (14) obj. -11 iterations 257
Cbc0038I Pass  22: suminf.    4.66667 (14) obj. -11 iterations 202
Cbc0038I Pass  23: suminf.    4.66667 (14) obj. -11 iterations 84
Cbc0038I Pass  24: suminf.    4.66667 (14) obj. -11 iterations 254
Cbc0038I Pass  25: suminf.    4.66667 (14) obj. -11 iterations 184
Cbc0038I Pass  26: suminf.    4.66667 (14) obj. -11 iterations 76
Cbc0038I Pass  27: suminf.    9.33333 (28) obj. -11 iterations 294
Cbc0038I Pass  28: suminf.    9.33333 (28) obj. -11 iterations 280
Cbc0038I Pass  29: suminf.   11.66667 (28) obj. -11 iterations 56
Cbc0038I Pass  30: suminf.   11.66667 (28) obj. -11 iterations 10
Cbc0038I Pass  31: suminf.    9.33333 (28) obj. -11 iterations 26
Cbc0038I Pass  32: suminf.    9.33333 (28) obj. -11 iterations 242
Cbc0038I Pass  33: suminf.    9.33333 (28) obj. -11 iterations 192
Cbc0038I Pass  34: suminf.    4.66667 (14) obj. -11 iterations 96
Cbc0038I Pass  35: suminf.    4.66667 (14) obj. -11 iterations 63
Cbc0038I Pass  36: suminf.    4.66667 (14) obj. -11 iterations 78
Cbc0038I Pass  37: suminf.    4.66667 (14) obj. -11 iterations 257
Cbc0038I Pass  38: suminf.    4.66667 (14) obj. -11 iterations 234
Cbc0038I Pass  39: suminf.    4.66667 (14) obj. -11 iterations 86
Cbc0038I Pass  40: suminf.    4.66667 (14) obj. -11 iterations 231
Cbc0038I Pass  41: suminf.    4.66667 (14) obj. -11 iterations 219
Cbc0038I Pass  42: suminf.    4.66667 (14) obj. -11 iterations 70
Cbc0038I Pass  43: suminf.    8.00000 (23) obj. -11 iterations 252
Cbc0038I Pass  44: suminf.    4.66667 (14) obj. -11 iterations 212
Cbc0038I Pass  45: suminf.    4.66667 (14) obj. -11 iterations 264
Cbc0038I Pass  46: suminf.    4.66667 (14) obj. -11 iterations 251
Cbc0038I Pass  47: suminf.    4.66667 (14) obj. -11 iterations 76
Cbc0038I Pass  48: suminf.    4.66667 (14) obj. -11 iterations 263
Cbc0038I Pass  49: suminf.    4.66667 (14) obj. -11 iterations 227
Cbc0038I Pass  50: suminf.    4.66667 (14) obj. -11 iterations 60
Cbc0038I Pass  51: suminf.    7.00000 (21) obj. -11 iterations 254
Cbc0038I Pass  52: suminf.    7.00000 (21) obj. -11 iterations 206
Cbc0038I Pass  53: suminf.    7.00000 (21) obj. -11 iterations 92
Cbc0038I Pass  54: suminf.    7.00000 (21) obj. -11 iterations 211
Cbc0038I Pass  55: suminf.    7.00000 (21) obj. -11 iterations 182
Cbc0038I Pass  56: suminf.    7.00000 (21) obj. -11 iterations 32
Cbc0038I Pass  57: suminf.    7.00000 (21) obj. -11 iterations 218
Cbc0038I Pass  58: suminf.    4.66667 (14) obj. -11 iterations 254
Cbc0038I Pass  59: suminf.    4.66667 (14) obj. -11 iterations 213
Cbc0038I Pass  60: suminf.    7.00000 (21) obj. -11 iterations 71
Cbc0038I Pass  61: suminf.    7.00000 (21) obj. -11 iterations 46
Cbc0038I Pass  62: suminf.    7.00000 (21) obj. -11 iterations 91
Cbc0038I Pass  63: suminf.    4.66667 (14) obj. -11 iterations 254
Cbc0038I Pass  64: suminf.    4.66667 (14) obj. -11 iterations 229
Cbc0038I Pass  65: suminf.    7.00000 (21) obj. -11 iterations 92
Cbc0038I Pass  66: suminf.    7.00000 (21) obj. -11 iterations 51
Cbc0038I Pass  67: suminf.    7.00000 (21) obj. -11 iterations 102
Cbc0038I Pass  68: suminf.    4.66667 (14) obj. -11 iterations 267
Cbc0038I Pass  69: suminf.    4.66667 (14) obj. -11 iterations 264
Cbc0038I Pass  70: suminf.    4.66667 (14) obj. -11 iterations 250
Cbc0038I Pass  71: suminf.    4.66667 (21) obj. -11 iterations 207
Cbc0038I Pass  72: suminf.    7.00000 (21) obj. -11 iterations 65
Cbc0038I Pass  73: suminf.    7.00000 (21) obj. -11 iterations 27
Cbc0038I Pass  74: suminf.    4.66667 (14) obj. -11 iterations 34
Cbc0038I Pass  75: suminf.    9.33333 (28) obj. -11 iterations 252
Cbc0038I Pass  76: suminf.    8.00000 (23) obj. -11 iterations 189
Cbc0038I Pass  77: suminf.    7.00000 (28) obj. -11 iterations 143
Cbc0038I Pass  78: suminf.    7.00000 (28) obj. -11 iterations 80
Cbc0038I Pass  79: suminf.    7.00000 (28) obj. -11 iterations 53
Cbc0038I Pass  80: suminf.    8.00000 (23) obj. -11 iterations 243
Cbc0038I Pass  81: suminf.    7.50000 (30) obj. -11 iterations 242
Cbc0038I Pass  82: suminf.    8.00000 (23) obj. -11 iterations 257
Cbc0038I Pass  83: suminf.    8.00000 (23) obj. -11 iterations 204
Cbc0038I Pass  84: suminf.    7.00000 (28) obj. -11 iterations 98
Cbc0038I Pass  85: suminf.    7.00000 (28) obj. -11 iterations 24
Cbc0038I Pass  86: suminf.    8.00000 (23) obj. -11 iterations 56
Cbc0038I Pass  87: suminf.    8.00000 (23) obj. -11 iterations 240
Cbc0038I Pass  88: suminf.    7.00000 (21) obj. -11 iterations 287
Cbc0038I Pass  89: suminf.    7.00000 (21) obj. -11 iterations 202
Cbc0038I Pass  90: suminf.    7.00000 (21) obj. -11 iterations 7
Cbc0038I Pass  91: suminf.    7.00000 (28) obj. -11 iterations 88
Cbc0038I Pass  92: suminf.    7.00000 (28) obj. -11 iterations 51
Cbc0038I Pass  93: suminf.    7.00000 (28) obj. -11 iterations 90
Cbc0038I Pass  94: suminf.   12.00000 (24) obj. -11 iterations 222
Cbc0038I Pass  95: suminf.   11.66667 (28) obj. -11 iterations 211
Cbc0038I Pass  96: suminf.    9.33333 (28) obj. -11 iterations 185
Cbc0038I Pass  97: suminf.    9.33333 (28) obj. -11 iterations 97
Cbc0038I Pass  98: suminf.    9.33333 (28) obj. -11 iterations 78
Cbc0038I Pass  99: suminf.   11.66667 (28) obj. -11 iterations 256
Cbc0038I Pass 100: suminf.   11.66667 (28) obj. -11 iterations 230
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1635 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2094 rows 1885 columns, reduced to 257 rows 230 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to -11 (1.48 seconds)
Cbc0038I After 1.48 seconds - Feasibility pump exiting with objective of -11 - took 1.12 seconds
Cbc0012I Integer solution of -11 found by feasibility pump after 0 iterations and 0 nodes (1.48 seconds)
Cbc0001I Search completed - best objective -10.9999999999999, took 0 iterations and 0 nodes (1.48 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -11 to -11
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                11.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             1.50
Time (Wallclock seconds):       1.52

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.55   (Wallclock seconds):       1.57

