Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home2/fxia/anaconda3/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/1f80f4e6654f49e3ba67ea9712c5f9af-pulp.mps max sec 15 timeMode elapsed branch printingOptions all solution /tmp/1f80f4e6654f49e3ba67ea9712c5f9af-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 24359 COLUMNS
At line 92390 RHS
At line 116745 BOUNDS
At line 123946 ENDATA
Problem MODEL has 24354 rows, 7200 columns and 65785 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 15
Option for timeMode changed from cpu to elapsed
Presolve 3368 (-20986) rows, 2076 (-5124) columns and 10818 (-54967) elements
Perturbing problem by 0.001% of 1.1547005 - largest nonzero change 0.00099913253 ( 0.19500381%) - largest zero change 0.00099759604
0  Obj 4 Primal inf 55.448692 (43) Dual inf 180.14651 (249)
142  Obj 46.974928 Primal inf 289.07109 (237)
284  Obj 45.961307 Primal inf 184.21402 (239)
426  Obj 45.95302 Primal inf 175.15485 (206)
568  Obj 45.94807 Primal inf 287.18055 (183)
710  Obj 45.944315 Primal inf 192.12401 (164)
852  Obj 45.940016 Primal inf 156.22063 (130)
994  Obj 45.935357 Primal inf 36.467239 (66)
1128  Obj 45.933377
Optimal - objective value 46
After Postsolve, objective 46, infeasibilities - dual 0 (0), primal 0 (0)
Optimal objective 46 - 1128 iterations time 0.042, Presolve 0.01
Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.09

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home2/fxia/anaconda3/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/e94b9943f28f46eabb2fecc1d2f7c584-pulp.mps max sec 15 timeMode elapsed branch printingOptions all solution /tmp/e94b9943f28f46eabb2fecc1d2f7c584-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 24359 COLUMNS
At line 106790 RHS
At line 131145 BOUNDS
At line 138346 ENDATA
Problem MODEL has 24354 rows, 7200 columns and 65785 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 15
Option for timeMode changed from cpu to elapsed
Continuous objective value is 46 - 0.04 seconds
Cgl0002I 3083 variables fixed
Cgl0003I 264 fixed, 0 tightened bounds, 1936 strengthened rows, 693 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 642 strengthened rows, 37 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 387 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 222 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 37 strengthened rows, 24 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 20 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 27 strengthened rows, 10 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 4 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 20 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 6 substitutions
Cgl0004I processed model has 1752 rows, 1656 columns (1656 integer (1622 of which binary)) and 7920 elements
Cbc0038I Initial state - 140 integers unsatisfied sum - 56.1667
Cbc0038I Pass   1: suminf.   39.00000 (100) obj. -44.9167 iterations 403
Cbc0038I Pass   2: suminf.   21.66667 (48) obj. -43 iterations 129
Cbc0038I Pass   3: suminf.   21.66667 (48) obj. -43 iterations 135
Cbc0038I Pass   4: suminf.   21.66667 (48) obj. -43 iterations 32
Cbc0038I Pass   5: suminf.   21.66667 (48) obj. -43 iterations 39
Cbc0038I Pass   6: suminf.    9.66667 (24) obj. -42 iterations 84
Cbc0038I Pass   7: suminf.    9.66667 (24) obj. -42 iterations 66
Cbc0038I Pass   8: suminf.    9.66667 (24) obj. -42 iterations 83
Cbc0038I Pass   9: suminf.    9.66667 (24) obj. -42 iterations 109
Cbc0038I Pass  10: suminf.    4.66667 (14) obj. -41 iterations 260
Cbc0038I Pass  11: suminf.    4.66667 (14) obj. -41 iterations 195
Cbc0038I Pass  12: suminf.    4.66667 (14) obj. -41 iterations 125
Cbc0038I Pass  13: suminf.    4.66667 (14) obj. -41 iterations 233
Cbc0038I Pass  14: suminf.    4.66667 (14) obj. -41 iterations 194
Cbc0038I Pass  15: suminf.    4.66667 (14) obj. -41 iterations 87
Cbc0038I Pass  16: suminf.    4.66667 (14) obj. -41 iterations 221
Cbc0038I Pass  17: suminf.    4.66667 (14) obj. -41 iterations 239
Cbc0038I Pass  18: suminf.    4.66667 (14) obj. -41 iterations 218
Cbc0038I Pass  19: suminf.    4.66667 (14) obj. -41 iterations 73
Cbc0038I Pass  20: suminf.    4.66667 (14) obj. -41 iterations 231
Cbc0038I Pass  21: suminf.    4.66667 (14) obj. -40.6667 iterations 209
Cbc0038I Pass  22: suminf.    4.66667 (14) obj. -41 iterations 181
Cbc0038I Pass  23: suminf.    4.66667 (14) obj. -41 iterations 118
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. -40 iterations 234
Cbc0038I Solution found of -40
Cbc0038I Cleaned solution of -40
Cbc0038I Before mini branch and bound, 1345 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1752 rows 1656 columns, reduced to 408 rows 297 columns
Cbc0038I Mini branch and bound improved solution from -40 to -45 (0.52 seconds)
Cbc0038I Round again with cutoff of -45.0667
Cbc0038I Reduced cost fixing fixed 54 variables on major pass 2
Cbc0038I Pass  25: suminf.   39.50000 (101) obj. -45.4167 iterations 10
Cbc0038I Pass  26: suminf.   14.66667 (34) obj. -45.1667 iterations 85
Cbc0038I Pass  27: suminf.   11.66694 (51) obj. -45.0667 iterations 291
Cbc0038I Pass  28: suminf.   13.53386 (41) obj. -45.0667 iterations 77
Cbc0038I Pass  29: suminf.   11.66694 (41) obj. -45.0667 iterations 67
Cbc0038I Pass  30: suminf.   13.53386 (41) obj. -45.0667 iterations 64
Cbc0038I Pass  31: suminf.   11.66694 (51) obj. -45.0667 iterations 150
Cbc0038I Pass  32: suminf.   11.66694 (41) obj. -45.0667 iterations 117
Cbc0038I Pass  33: suminf.   11.66694 (41) obj. -45.0667 iterations 64
Cbc0038I Pass  34: suminf.   15.93418 (47) obj. -45.0667 iterations 131
Cbc0038I Pass  35: suminf.   11.66694 (41) obj. -45.0667 iterations 125
Cbc0038I Pass  36: suminf.   11.66694 (41) obj. -45.0667 iterations 84
Cbc0038I Pass  37: suminf.    9.06726 (37) obj. -45.0667 iterations 125
Cbc0038I Pass  38: suminf.    6.66694 (31) obj. -45.0667 iterations 104
Cbc0038I Pass  39: suminf.    6.66694 (31) obj. -45.0667 iterations 212
Cbc0038I Pass  40: suminf.    8.53386 (31) obj. -45.0667 iterations 285
Cbc0038I Pass  41: suminf.    6.66694 (31) obj. -45.0667 iterations 126
Cbc0038I Pass  42: suminf.    9.66667 (24) obj. -45.1667 iterations 235
Cbc0038I Pass  43: suminf.    6.66694 (31) obj. -45.0667 iterations 212
Cbc0038I Pass  44: suminf.    9.66667 (24) obj. -45.1667 iterations 206
Cbc0038I Pass  45: suminf.   11.06654 (24) obj. -45.0667 iterations 215
Cbc0038I Pass  46: suminf.    6.66694 (31) obj. -45.0667 iterations 228
Cbc0038I Pass  47: suminf.    9.66667 (24) obj. -45.1667 iterations 199
Cbc0038I Pass  48: suminf.    9.66667 (24) obj. -45.1667 iterations 192
Cbc0038I Pass  49: suminf.    6.66694 (31) obj. -45.0667 iterations 215
Cbc0038I Pass  50: suminf.    9.66667 (24) obj. -45.1667 iterations 199
Cbc0038I Pass  51: suminf.    6.66694 (31) obj. -45.0667 iterations 177
Cbc0038I Pass  52: suminf.    9.66667 (24) obj. -45.1667 iterations 168
Cbc0038I Pass  53: suminf.   12.93346 (36) obj. -45.0667 iterations 171
Cbc0038I Pass  54: suminf.    5.93346 (24) obj. -45.0667 iterations 209
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1358 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1752 rows 1656 columns, reduced to 371 rows 284 columns
Cbc0038I Mini branch and bound did not improve solution (0.77 seconds)
Cbc0038I After 0.77 seconds - Feasibility pump exiting with objective of -45 - took 0.49 seconds
Cbc0012I Integer solution of -45 found by feasibility pump after 0 iterations and 0 nodes (0.77 seconds)
Cbc0038I Full problem 1752 rows 1656 columns, reduced to 240 rows 161 columns
Cbc0031I 6 added rows had average density of 48.666667
Cbc0013I At root node, 6 cuts changed objective from -45.666667 to -45.333333 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 23 column cuts (23 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 39 row cuts average 87.9 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 163 row cuts average 129.8 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -45 best solution, best possible -45.333333 (0.98 seconds)
Cbc0001I Search completed - best objective -45.0000000000002, took 331 iterations and 10 nodes (1.25 seconds)
Cbc0032I Strong branching done 198 times (1404 iterations), fathomed 6 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 80 variables fixed on reduced cost
Cuts at root node changed objective from -45.6667 to -45.3333
Probing was tried 20 times and created 25 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
Gomory was tried 20 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)
Knapsack was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 20 times and created 170 cuts of which 0 were active after adding rounds of cuts (0.078 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                45.00000000
Enumerated nodes:               10
Total iterations:               331
Time (CPU seconds):             1.28
Time (Wallclock seconds):       1.29

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.32   (Wallclock seconds):       1.34

