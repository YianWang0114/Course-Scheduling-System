Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home2/wangyian/miniconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/c51602755669455886ffc16ce15cd0e7-pulp.mps max sec 15 timeMode elapsed branch printingOptions all solution /tmp/c51602755669455886ffc16ce15cd0e7-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 23307 COLUMNS
At line 88403 RHS
At line 111706 BOUNDS
At line 118507 ENDATA
Problem MODEL has 23302 rows, 6800 columns and 62910 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 15
Option for timeMode changed from cpu to elapsed
Presolve 3182 (-20120) rows, 1888 (-4912) columns and 10067 (-52843) elements
Perturbing problem by 0.001% of 1.1547005 - largest nonzero change 0.00098598684 ( 0.1870736%) - largest zero change 0.00098490091
0  Obj 4 Primal inf 52.764138 (41) Dual inf 158.94715 (219)
138  Obj 45.976623 Primal inf 400.96006 (235)
276  Obj 44.965409 Primal inf 224.53769 (228)
414  Obj 44.955442 Primal inf 191.6718 (215)
552  Obj 44.949346 Primal inf 131.36103 (180)
690  Obj 44.945849 Primal inf 153.68195 (192)
828  Obj 44.943111 Primal inf 471.88328 (165)
966  Obj 44.939104 Primal inf 50.080506 (89)
1104  Obj 44.936104 Primal inf 24.31431 (96)
1242  Obj 44.935545 Primal inf 8.0453695 (9)
1251  Obj 44.935507
Optimal - objective value 45
After Postsolve, objective 45, infeasibilities - dual 0 (0), primal 0 (0)
Optimal objective 45 - 1251 iterations time 0.052, Presolve 0.01
Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home2/wangyian/miniconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/86ecedf16f794e979b390eadd0343492-pulp.mps max sec 15 timeMode elapsed branch printingOptions all solution /tmp/86ecedf16f794e979b390eadd0343492-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 23307 COLUMNS
At line 102003 RHS
At line 125306 BOUNDS
At line 132107 ENDATA
Problem MODEL has 23302 rows, 6800 columns and 62910 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 15
Option for timeMode changed from cpu to elapsed
Continuous objective value is 45 - 0.05 seconds
Cgl0002I 2923 variables fixed
Cgl0003I 232 fixed, 0 tightened bounds, 1903 strengthened rows, 574 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 649 strengthened rows, 38 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 349 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 181 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 1612 rows, 1550 columns (1550 integer (1519 of which binary)) and 7329 elements
Cbc0038I Initial state - 85 integers unsatisfied sum - 40
Cbc0038I Pass   1: suminf.   26.00000 (52) obj. -42 iterations 396
Cbc0038I Pass   2: suminf.   25.50000 (61) obj. -41.75 iterations 174
Cbc0038I Pass   3: suminf.   10.00000 (20) obj. -41.5 iterations 154
Cbc0038I Pass   4: suminf.    9.66667 (24) obj. -41.3333 iterations 180
Cbc0038I Pass   5: suminf.    9.66667 (24) obj. -41.3333 iterations 159
Cbc0038I Pass   6: suminf.    4.66667 (14) obj. -39.6667 iterations 217
Cbc0038I Pass   7: suminf.    4.66667 (14) obj. -40 iterations 192
Cbc0038I Pass   8: suminf.    4.66667 (14) obj. -40 iterations 125
Cbc0038I Pass   9: suminf.    4.66667 (14) obj. -40 iterations 181
Cbc0038I Pass  10: suminf.    4.66667 (14) obj. -40 iterations 188
Cbc0038I Pass  11: suminf.    4.66667 (14) obj. -40 iterations 197
Cbc0038I Pass  12: suminf.    4.66667 (14) obj. -40 iterations 225
Cbc0038I Pass  13: suminf.    4.66667 (14) obj. -40 iterations 183
Cbc0038I Pass  14: suminf.    4.66667 (14) obj. -40 iterations 112
Cbc0038I Pass  15: suminf.    4.66667 (14) obj. -40 iterations 203
Cbc0038I Pass  16: suminf.    4.66667 (14) obj. -40 iterations 224
Cbc0038I Pass  17: suminf.    4.66667 (14) obj. -40.6667 iterations 246
Cbc0038I Pass  18: suminf.    4.66667 (14) obj. -40.6667 iterations 178
Cbc0038I Pass  19: suminf.    4.66667 (14) obj. -40.6667 iterations 80
Cbc0038I Pass  20: suminf.    4.66667 (14) obj. -40.6667 iterations 193
Cbc0038I Pass  21: suminf.    4.66667 (14) obj. -40.6667 iterations 227
Cbc0038I Pass  22: suminf.    4.66667 (14) obj. -40.6667 iterations 240
Cbc0038I Pass  23: suminf.    4.66667 (14) obj. -39.6667 iterations 215
Cbc0038I Pass  24: suminf.    4.66667 (14) obj. -40 iterations 187
Cbc0038I Pass  25: suminf.    4.66667 (14) obj. -40 iterations 122
Cbc0038I Pass  26: suminf.    4.66667 (14) obj. -40 iterations 212
Cbc0038I Pass  27: suminf.    4.66667 (14) obj. -40 iterations 197
Cbc0038I Pass  28: suminf.    4.66667 (14) obj. -40 iterations 134
Cbc0038I Pass  29: suminf.    4.66667 (14) obj. -40 iterations 183
Cbc0038I Pass  30: suminf.    4.66667 (14) obj. -40 iterations 188
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1380 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1612 rows 1550 columns, reduced to 248 rows 162 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to -41 (0.60 seconds)
Cbc0038I Round again with cutoff of -41.125
Cbc0038I Pass  30: suminf.   26.00000 (52) obj. -42 iterations 0
Cbc0038I Pass  31: suminf.   25.50000 (61) obj. -41.75 iterations 187
Cbc0038I Pass  32: suminf.   25.50000 (61) obj. -41.75 iterations 114
Cbc0038I Pass  33: suminf.   10.00000 (20) obj. -41.5 iterations 134
Cbc0038I Pass  34: suminf.    9.66667 (24) obj. -41.3333 iterations 222
Cbc0038I Pass  35: suminf.    9.66667 (24) obj. -41.3333 iterations 148
Cbc0038I Pass  36: suminf.    9.66667 (24) obj. -41.3333 iterations 211
Cbc0038I Pass  37: suminf.    9.66667 (24) obj. -41.3333 iterations 199
Cbc0038I Pass  38: suminf.    9.66667 (24) obj. -41.3333 iterations 123
Cbc0038I Pass  39: suminf.    9.66667 (24) obj. -41.3333 iterations 52
Cbc0038I Pass  40: suminf.    9.66667 (24) obj. -41.3333 iterations 47
Cbc0038I Pass  41: suminf.   12.00000 (31) obj. -41.1667 iterations 227
Cbc0038I Pass  42: suminf.    9.75020 (44) obj. -41.125 iterations 270
Cbc0038I Pass  43: suminf.    9.75020 (44) obj. -41.125 iterations 79
Cbc0038I Pass  44: suminf.   11.00029 (47) obj. -41.125 iterations 215
Cbc0038I Pass  45: suminf.    9.75020 (44) obj. -41.125 iterations 162
Cbc0038I Pass  46: suminf.    9.75020 (44) obj. -41.125 iterations 33
Cbc0038I Pass  47: suminf.    9.75020 (44) obj. -41.125 iterations 108
Cbc0038I Pass  48: suminf.   21.49989 (53) obj. -41.125 iterations 227
Cbc0038I Pass  49: suminf.   17.00000 (41) obj. -41.5 iterations 200
Cbc0038I Pass  50: suminf.   17.00000 (41) obj. -41.5 iterations 108
Cbc0038I Pass  51: suminf.   17.00000 (41) obj. -41.5 iterations 38
Cbc0038I Pass  52: suminf.   17.00000 (41) obj. -41.5 iterations 183
Cbc0038I Pass  53: suminf.   17.00000 (41) obj. -41.5 iterations 139
Cbc0038I Pass  54: suminf.   17.00000 (41) obj. -41.5 iterations 107
Cbc0038I Pass  55: suminf.   24.04156 (63) obj. -41.125 iterations 210
Cbc0038I Pass  56: suminf.   14.66667 (34) obj. -41.6667 iterations 207
Cbc0038I Pass  57: suminf.   13.50000 (32) obj. -41.25 iterations 106
Cbc0038I Pass  58: suminf.   13.50000 (44) obj. -41.125 iterations 146
Cbc0038I Pass  59: suminf.   13.50000 (44) obj. -41.125 iterations 104
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1256 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1612 rows 1550 columns, reduced to 384 rows 283 columns
Cbc0038I Mini branch and bound did not improve solution (0.97 seconds)
Cbc0038I After 0.97 seconds - Feasibility pump exiting with objective of -41 - took 0.73 seconds
Cbc0012I Integer solution of -41 found by feasibility pump after 0 iterations and 0 nodes (0.97 seconds)
Cbc0038I Full problem 1612 rows 1550 columns, reduced to 182 rows 103 columns
Cbc0031I 4 added rows had average density of 109.5
Cbc0013I At root node, 4 cuts changed objective from -42.25 to -42 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 10 column cuts (10 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 111.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 54 row cuts average 67.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -41 best solution, best possible -42 (1.16 seconds)
Cbc0016I Integer solution of -42 found by strong branching after 205 iterations and 3 nodes (1.32 seconds)
Cbc0001I Search completed - best objective -42.0000000000002, took 205 iterations and 3 nodes (1.32 seconds)
Cbc0032I Strong branching done 74 times (1124 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 13 variables fixed on reduced cost
Cuts at root node changed objective from -42.25 to -42
Probing was tried 10 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Gomory was tried 10 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Knapsack was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 10 times and created 54 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                42.00000000
Enumerated nodes:               3
Total iterations:               205
Time (CPU seconds):             1.34
Time (Wallclock seconds):       1.35

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.39   (Wallclock seconds):       1.40

