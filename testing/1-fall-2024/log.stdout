Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home2/wangyian/miniconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/2357ce3a91524fcc8626c57a8438679a-pulp.mps max sec 15 timeMode elapsed branch printingOptions all solution /tmp/2357ce3a91524fcc8626c57a8438679a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 24359 COLUMNS
At line 92390 RHS
At line 116745 BOUNDS
At line 123946 ENDATA
Problem MODEL has 24354 rows, 7200 columns and 65785 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 15
Option for timeMode changed from cpu to elapsed
Presolve 3368 (-20986) rows, 2076 (-5124) columns and 10818 (-54967) elements
Perturbing problem by 0.001% of 1.1547005 - largest nonzero change 0.00099913253 ( 0.19500381%) - largest zero change 0.00099759604
0  Obj 4 Primal inf 55.448692 (43) Dual inf 180.14651 (249)
142  Obj 45.974676 Primal inf 226.59987 (208)
284  Obj 45.958853 Primal inf 187.53824 (246)
426  Obj 45.950318 Primal inf 166.35878 (209)
568  Obj 45.947201 Primal inf 189.33586 (145)
710  Obj 45.941766 Primal inf 163.73951 (152)
852  Obj 45.938316 Primal inf 143.12309 (136)
994  Obj 45.935208 Primal inf 103.84773 (122)
1116  Obj 45.933409
Optimal - objective value 46
After Postsolve, objective 46, infeasibilities - dual 0 (0), primal 0 (0)
Optimal objective 46 - 1116 iterations time 0.032, Presolve 0.01
Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.09

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home2/wangyian/miniconda3/lib/python3.9/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/903dc2496119480eb19b10c6e6ef7072-pulp.mps max sec 15 timeMode elapsed branch printingOptions all solution /tmp/903dc2496119480eb19b10c6e6ef7072-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 24359 COLUMNS
At line 106790 RHS
At line 131145 BOUNDS
At line 138346 ENDATA
Problem MODEL has 24354 rows, 7200 columns and 65785 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 15
Option for timeMode changed from cpu to elapsed
Continuous objective value is 46 - 0.03 seconds
Cgl0002I 3083 variables fixed
Cgl0003I 264 fixed, 0 tightened bounds, 1936 strengthened rows, 696 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 650 strengthened rows, 37 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 382 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 220 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 37 strengthened rows, 24 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 20 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 27 strengthened rows, 10 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 4 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 20 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 6 substitutions
Cgl0004I processed model has 1752 rows, 1656 columns (1656 integer (1622 of which binary)) and 7921 elements
Cbc0038I Initial state - 149 integers unsatisfied sum - 55.6667
Cbc0038I Pass   1: suminf.   41.50000 (125) obj. -45.1667 iterations 405
Cbc0038I Pass   2: suminf.   25.00000 (57) obj. -44.6667 iterations 134
Cbc0038I Pass   3: suminf.   25.00000 (57) obj. -44.6667 iterations 31
Cbc0038I Pass   4: suminf.    9.66667 (24) obj. -44.1667 iterations 50
Cbc0038I Pass   5: suminf.    4.66667 (14) obj. -44 iterations 140
Cbc0038I Pass   6: suminf.    4.66667 (14) obj. -44 iterations 130
Cbc0038I Pass   7: suminf.    5.50000 (11) obj. -42 iterations 299
Cbc0038I Pass   8: suminf.    5.50000 (11) obj. -42 iterations 266
Cbc0038I Pass   9: suminf.    4.66667 (14) obj. -42 iterations 136
Cbc0038I Pass  10: suminf.    4.66667 (14) obj. -42 iterations 67
Cbc0038I Pass  11: suminf.    4.66667 (14) obj. -42 iterations 242
Cbc0038I Pass  12: suminf.    4.66667 (14) obj. -42 iterations 224
Cbc0038I Pass  13: suminf.    4.66667 (14) obj. -42 iterations 233
Cbc0038I Pass  14: suminf.    4.66667 (14) obj. -41 iterations 205
Cbc0038I Pass  15: suminf.    4.66667 (14) obj. -41 iterations 195
Cbc0038I Pass  16: suminf.    4.66667 (14) obj. -41 iterations 41
Cbc0038I Pass  17: suminf.    7.00000 (21) obj. -40.6667 iterations 214
Cbc0038I Pass  18: suminf.    7.00000 (21) obj. -41 iterations 197
Cbc0038I Pass  19: suminf.    7.00000 (21) obj. -41 iterations 75
Cbc0038I Pass  20: suminf.    7.00000 (21) obj. -41 iterations 170
Cbc0038I Pass  21: suminf.    7.00000 (21) obj. -41 iterations 166
Cbc0038I Pass  22: suminf.    7.00000 (21) obj. -41 iterations 106
Cbc0038I Pass  23: suminf.    7.00000 (21) obj. -41.6667 iterations 203
Cbc0038I Pass  24: suminf.    7.00000 (21) obj. -42 iterations 189
Cbc0038I Pass  25: suminf.    4.66667 (14) obj. -42 iterations 48
Cbc0038I Pass  26: suminf.    4.66667 (14) obj. -42 iterations 85
Cbc0038I Pass  27: suminf.    7.00000 (21) obj. -42 iterations 107
Cbc0038I Pass  28: suminf.    7.00000 (21) obj. -42 iterations 223
Cbc0038I Pass  29: suminf.    7.00000 (21) obj. -42 iterations 202
Cbc0038I Pass  30: suminf.    7.00000 (21) obj. -42 iterations 78
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1381 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1752 rows 1656 columns, reduced to 354 rows 264 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to -44 (0.54 seconds)
Cbc0038I Round again with cutoff of -44.1667
Cbc0038I Pass  30: suminf.   41.50000 (125) obj. -45.1667 iterations 0
Cbc0038I Pass  31: suminf.   25.00000 (57) obj. -44.6667 iterations 131
Cbc0038I Pass  32: suminf.   25.00000 (57) obj. -44.6667 iterations 16
Cbc0038I Pass  33: suminf.    9.66692 (29) obj. -44.1667 iterations 231
Cbc0038I Pass  34: suminf.    9.66677 (35) obj. -44.1667 iterations 252
Cbc0038I Pass  35: suminf.    9.66677 (35) obj. -44.1667 iterations 25
Cbc0038I Pass  36: suminf.    9.66683 (37) obj. -44.1667 iterations 54
Cbc0038I Pass  37: suminf.    9.66667 (34) obj. -44.1667 iterations 212
Cbc0038I Pass  38: suminf.    6.66676 (20) obj. -44.1667 iterations 203
Cbc0038I Pass  39: suminf.    6.66676 (25) obj. -44.1667 iterations 107
Cbc0038I Pass  40: suminf.    6.66676 (25) obj. -44.1667 iterations 62
Cbc0038I Pass  41: suminf.    6.66676 (20) obj. -44.1667 iterations 15
Cbc0038I Pass  42: suminf.    6.66676 (25) obj. -44.1667 iterations 67
Cbc0038I Pass  43: suminf.   11.66676 (30) obj. -44.1667 iterations 190
Cbc0038I Pass  44: suminf.   11.66676 (40) obj. -44.1667 iterations 194
Cbc0038I Pass  45: suminf.   11.66676 (40) obj. -44.1667 iterations 60
Cbc0038I Pass  46: suminf.   11.66676 (30) obj. -44.1667 iterations 33
Cbc0038I Pass  47: suminf.   11.66676 (30) obj. -44.1667 iterations 91
Cbc0038I Pass  48: suminf.   11.66676 (40) obj. -44.1667 iterations 182
Cbc0038I Pass  49: suminf.   11.66676 (40) obj. -44.1667 iterations 78
Cbc0038I Pass  50: suminf.   11.66676 (30) obj. -44.1667 iterations 41
Cbc0038I Pass  51: suminf.   11.66676 (35) obj. -44.1667 iterations 83
Cbc0038I Pass  52: suminf.   11.66676 (40) obj. -44.1667 iterations 84
Cbc0038I Pass  53: suminf.    8.50019 (36) obj. -44.1667 iterations 188
Cbc0038I Pass  54: suminf.    7.16678 (36) obj. -44.1667 iterations 165
Cbc0038I Pass  55: suminf.    8.66686 (34) obj. -44.1667 iterations 137
Cbc0038I Pass  56: suminf.    7.00011 (22) obj. -44.1667 iterations 118
Cbc0038I Pass  57: suminf.    7.00011 (22) obj. -44.1667 iterations 46
Cbc0038I Pass  58: suminf.    7.00011 (22) obj. -44.1667 iterations 52
Cbc0038I Pass  59: suminf.    8.33324 (20) obj. -44.1667 iterations 291
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1314 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1752 rows 1656 columns, reduced to 434 rows 332 columns
Cbc0038I Mini branch and bound improved solution from -44 to -45 (0.75 seconds)
Cbc0038I Round again with cutoff of -45.1333
Cbc0038I Reduced cost fixing fixed 55 variables on major pass 3
Cbc0038I Pass  59: suminf.   41.50000 (125) obj. -45.1667 iterations 0
Cbc0038I Pass  60: suminf.   27.73332 (73) obj. -45.1333 iterations 200
Cbc0038I Pass  61: suminf.   26.33341 (70) obj. -45.1333 iterations 114
Cbc0038I Pass  62: suminf.   26.33341 (70) obj. -45.1333 iterations 4
Cbc0038I Pass  63: suminf.   26.33341 (70) obj. -45.1333 iterations 17
Cbc0038I Pass  64: suminf.   20.26716 (77) obj. -45.1333 iterations 136
Cbc0038I Pass  65: suminf.   16.00024 (41) obj. -45.1333 iterations 29
Cbc0038I Pass  66: suminf.   11.00024 (31) obj. -45.1333 iterations 33
Cbc0038I Pass  67: suminf.    4.66667 (14) obj. -45.3333 iterations 216
Cbc0038I Pass  68: suminf.    1.86678 (14) obj. -45.1333 iterations 115
Cbc0038I Pass  69: suminf.    4.66667 (14) obj. -45.3333 iterations 162
Cbc0038I Pass  70: suminf.    4.66667 (14) obj. -45.3333 iterations 214
Cbc0038I Pass  71: suminf.    4.66667 (14) obj. -45.3333 iterations 227
Cbc0038I Pass  72: suminf.    4.66667 (14) obj. -45.3333 iterations 256
Cbc0038I Pass  73: suminf.    1.86678 (14) obj. -45.1333 iterations 186
Cbc0038I Pass  74: suminf.    4.66667 (14) obj. -45.3333 iterations 119
Cbc0038I Pass  75: suminf.    1.86678 (14) obj. -45.1333 iterations 225
Cbc0038I Pass  76: suminf.    1.86678 (14) obj. -45.1333 iterations 242
Cbc0038I Pass  77: suminf.    1.86678 (14) obj. -45.1333 iterations 187
Cbc0038I Pass  78: suminf.    4.66667 (14) obj. -45.3333 iterations 104
Cbc0038I Pass  79: suminf.    1.86678 (14) obj. -45.1333 iterations 227
Cbc0038I Pass  80: suminf.    1.86678 (14) obj. -45.1333 iterations 219
Cbc0038I Pass  81: suminf.    1.86678 (14) obj. -45.1333 iterations 208
Cbc0038I Pass  82: suminf.    4.66667 (14) obj. -45.3333 iterations 99
Cbc0038I Pass  83: suminf.    1.86678 (14) obj. -45.1333 iterations 232
Cbc0038I Pass  84: suminf.    1.86678 (14) obj. -45.1333 iterations 244
Cbc0038I Pass  85: suminf.    1.86678 (14) obj. -45.1333 iterations 249
Cbc0038I Pass  86: suminf.    1.86678 (14) obj. -45.1333 iterations 202
Cbc0038I Pass  87: suminf.    4.66667 (14) obj. -45.3333 iterations 116
Cbc0038I Pass  88: suminf.    1.86678 (14) obj. -45.1333 iterations 216
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1430 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1752 rows 1656 columns, reduced to 304 rows 215 columns
Cbc0038I Mini branch and bound did not improve solution (1.06 seconds)
Cbc0038I After 1.06 seconds - Feasibility pump exiting with objective of -45 - took 0.80 seconds
Cbc0012I Integer solution of -45 found by feasibility pump after 0 iterations and 0 nodes (1.06 seconds)
Cbc0038I Full problem 1752 rows 1656 columns, reduced to 244 rows 155 columns
Cbc0031I 5 added rows had average density of 60
Cbc0013I At root node, 5 cuts changed objective from -45.666667 to -45.333333 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 14 column cuts (14 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 126.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 110 row cuts average 108.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -45 best solution, best possible -45.333333 (1.24 seconds)
Cbc0001I Search completed - best objective -45.0000000000002, took 271 iterations and 6 nodes (1.42 seconds)
Cbc0032I Strong branching done 114 times (511 iterations), fathomed 4 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 80 variables fixed on reduced cost
Cuts at root node changed objective from -45.6667 to -45.3333
Probing was tried 16 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
Gomory was tried 16 times and created 46 cuts of which 0 were active after adding rounds of cuts (0.046 seconds)
Knapsack was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 16 times and created 140 cuts of which 0 were active after adding rounds of cuts (0.054 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                45.00000000
Enumerated nodes:               6
Total iterations:               271
Time (CPU seconds):             1.44
Time (Wallclock seconds):       1.46

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.49   (Wallclock seconds):       1.51

